<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Details</title>
    <link rel="stylesheet" href="/dashboard.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.2.3/css/buttons.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f3f4f6;
            margin: 0;
        }

        .main-container {
            display: flex;
            min-height: 100vh;
        }

        .content-container {
         margin-left: 260px; 
         margin-top: 70px; 
          padding: 20px;
          width: 100%;
         height: 100vh;
        }

        @media (max-width: 768px) {
            .content-container {
                margin-left:auto
            }
        }

        .category-details-container {
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-top: 1rem;
            padding: 20px;
        }

        .category-header {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }

        .category-header img {
            width: 100px;
            height: 100px;
            border-radius: 10px;
            border: 2px solid #ddd;
        }

        .category-info {
            flex-grow: 1;
        }

        .category-info h2 {
            margin: 0;
            font-size: 26px;
        }

        .category-info p {
            margin: 5px 0;
            font-size: 18px;
            color: #666;
        }

        .category-actions button {
            padding: 10px;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            color: #fff;
            cursor: pointer;
            margin: 5px;
        }

        .btn-active {
            background-color: #4caf50;
        }

        .btn-inactive {
            background-color: #f44336;
        }

        .btn-delete {
            background-color: #f44336;
        }

        /* Pagination Styles */
        .pagination-container {
            margin-top: 20px;
            text-align: center;
        }

        .pagination-btn {
            padding: 8px 12px;
            border: 1px solid #ddd;
            margin: 5px;
            cursor: pointer;
        }

        .current-page {
            background-color: #007bff;
            color: white;
        }

        @media (max-width: 767px) {
            .category-header {
                flex-direction: column;
                align-items: center;
            }
        }

        /* For active category (when status is true) */
        .btn-status.active {
            background-color: #28a745; /* Green color */
            color: white;
        }

        /* For inactive category (when status is false) */
        .btn-status.inactive {
            background-color: #dc3545; /* Red color */
            color: white;
        }

        /* Optional: Style the button */
        .btn-status {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
        }

        .tiles-perfection-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .tiles-perfection-table th, .tiles-perfection-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        .tiles-perfection-table th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    <%- include('partials/header') %>
    <div class="main-container">
        <%- include('partials/sidebar', { page: 'productview' }) %>
        <div class="content-container">
            <div class="category-details-container">
                <div class="category-header">
                    <% if (product.images && product.images.length > 0) { %>
                        <div class="product-images">
                            <% product.images.forEach(image => { %>
                                <img src="/uploads/<%= image %>" alt="Product Image" class="product-image">
                            <% }); %>
                        </div>
                    <% } else { %>
                        <p>No images available</p>
                    <% } %>
                    <div class="category-info">
                        <h2>Product Name: <%= product.name %></h2>
                        <p>Position: <%= product.position %></p>
                        <p>Description: <%= product.description %></p>
                    </div>
                </div>
                
                <button class="btn-status <%= product.status ? 'active' : 'inactive' %>" onclick="toggleproductStatus('<%= product._id %>')">
                    <%= product.status ? 'Deactivate Product' : 'Activate Product' %>
                </button>
                <button class="btn-status inactive" onclick="deleteproduct('<%= product._id %>')">Delete Product</button>
                <button class="btn btn-primary" onclick="vieworderList('<%= product._id %>')"  style="background-color: #b31ca6;">Orders</button>
                <button class="btn btn-primary" onclick="tilesperfection()">Tiles Perfection</button>
            </div>
            <div id="product-list" style="display:none;">
                <h3>Oders of this products (combine orders)</h3>
                <table id="product-table" class="display">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Grand Total</th>
                            <th>Date</th>
                            <th>Status</th>
                            <th>Bill To</th>
                            <th>Ship To</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="tiles-perfection-info" style="display:none;">
                <h3>Tiles Perfection</h3>
                <table class="tiles-perfection-table">
                    <tr>
                        <th>Appearance</th>
                        <td><%= product.tilesPerfection.appearance %></td>
                    </tr>
                    <tr>
                        <th>Material</th>
                        <td><%= product.tilesPerfection.material %></td>
                    </tr>
                    <tr>
                        <th>Glaze</th>
                        <td><%= product.tilesPerfection.glaze %></td>
                    </tr>
                    <tr>
                        <th>Rectified</th>
                        <td><%= product.tilesPerfection.rectified %></td>
                    </tr>
                    <tr>
                        <th>Color</th>
                        <td><%= product.tilesPerfection.color %></td>
                    </tr>
                    <tr>
                        <th>Thickness</th>
                        <td><%= product.tilesPerfection.thickness %></td>
                    </tr>
                    <tr>
                        <th>Recommended Room</th>
                        <td><%= product.tilesPerfection.recommendedRoom %></td>
                    </tr>
                    <tr>
                        <th>Quantity Per Square Meter</th>
                        <td><%= product.tilesPerfection.quantityPerSquareMeter %></td>
                    </tr>
                    <tr>
                        <th>Type</th>
                        <td><%= product.tilesPerfection.type %></td>
                    </tr>
                    <tr>
                        <th>Print</th>
                        <td><%= product.tilesPerfection.print %></td>
                    </tr>
                    <tr>
                        <th>Usage</th>
                        <td><%= product.tilesPerfection.usage %></td>
                    </tr>
                    <tr>
                        <th>Size MM</th>
                        <td><%= product.tilesPerfection.sizeMM %></td>
                    </tr>
                    <tr>
                        <th>Box Quantity</th>
                        <td><%= product.tilesPerfection.boxQuantity %></td>
                    </tr>
                    <tr>
                        <th>Wastage</th>
                        <td><%= product.tilesPerfection.wastage %></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.html5.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function toggleproductStatus(productId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to change the productId status?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, change it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/product/toggle-status/${productId}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                    })
                    .then(response => response.json())
                    .then(data => {
                        Swal.fire('Success!', data.message, 'success');
                        const statusButton = document.querySelector('.btn-status');
                        statusButton.classList.toggle('active', data.product.status);
                        statusButton.classList.toggle('inactive', !data.product.status);
                        statusButton.textContent = data.product.status ? 'Deactivate Product' : 'Activate Product';
                     })
                    .catch(error => {
                        Swal.fire('Error!', 'Failed to change status.', 'error');
                        console.error('Error toggling status:', error);
                    });
                }
            });
        }
        function deleteproduct(productId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to delete this product?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/product/delete/${productId}`, {
                        method: 'DELETE'
                    })
                    .then(response => response.json())
                    .then(data => {
                        Swal.fire('Deleted!', data.message, 'success');
                        window.location = '/admin/productlist'; 
                    })
                    .catch(error => {
                        Swal.fire('Error!', 'Failed to delete product.', 'error');
                        console.error('Error deleting product:', error);
                    });
                }
            });
        }
        function vieworderList(productId) {
            $('#product-list').toggle();
            initializeProductTable(productId);
        }
        function tilesperfection(productId) {
            let tilesInfo = document.querySelector('.tiles-perfection-info');
        let ordertable = document.getElementById('product-list');
           ordertable.style.display = "none";
    if (tilesInfo.style.display === "none" || tilesInfo.style.display === "") {
        tilesInfo.style.display = "block";
    } else {
        tilesInfo.style.display = "none";
    }
        }
        function initializeProductTable(productId) {
            let tilesInfo = document.querySelector('.tiles-perfection-info');
            tilesInfo.style.display = "none";

            if ($.fn.DataTable.isDataTable('#product-table')) {
                $('#product-table').DataTable().destroy(); // Destroy if already initialized
            }

            $('#product-table').DataTable({
                serverSide: true,
                processing: true,
                initComplete: function () {
            $('.dataTables_filter input').attr('placeholder', 'Order ID');
        },

                ajax: function (data, callback, settings) {
                    const params = {
                        limit: data.length,
                        page: (data.start / data.length) + 1,
                        search: data.search.value
                    };
                    fetch(`/admin/product/orders/${productId}?` + new URLSearchParams(params))
                        .then(response => response.json())
                        .then(result => {
                            callback({
                                draw: data.draw,
                                recordsTotal: result.recordsTotal,
                                recordsFiltered: result.recordsFiltered,
                                data: result.data
                            });
                        })
                        .catch(error => {
                            console.error('Error fetching products:', error);
                        });
                },
                columns: [
                    { data: 'orderno' },
                    { data: 'grand_total', render: (data) => `₹${data.toFixed(2)}` },
                    { data: 'order_date', render: (data) => new Date(data).toLocaleDateString() },
                    { 
                             data: 'order_status',
                             render: function (data) {
                               let statusColors = {
                                   'Placed': '#007bff',   
                                   'Confirmed': '#17a2b8',
                                   'Shipped': '#ffc107',  
                                   'Delivered': '#28a745',
                                   'Cancelled': '#dc3545' 
                               };

                                let bgColor = statusColors[data] || '#6c757d'; // Default to gray if status is unknown
                                                    
                                return `<span style="background-color: ${bgColor}; color: white; padding: 5px 10px; border-radius: 5px;">${data}</span>`;
                            }
                    },
                    { data: 'user',
                    render: function(data) {
                    return data && data.username ? data.username : 'Guest';
                    }
                     },
                    { data: 'telephone' },
                    {
                        data: '_id',
                        render: (data) => `
                            <a href="/admin/orders/${data}" class="btn btn-sm btn-primary">Order View</a>
                            <a href="/admin/orders/track/${data}" class="btn btn-sm btn-secondary ms-2">Order Track</a>
                        `
                    }
                ]
            });
        }
    </script>
</body>
</html>
